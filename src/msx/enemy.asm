; ====================================================================================================
;
; enemy.asm
;
; included from sprite.asm
;
; ====================================================================================================
INCLUDE "enemy1.asm"
INCLUDE "enemy2.asm"
INCLUDE "enemy3.asm"

SECTION code_user

; ■テキ出現時の点滅時間
ENEMY_FLASHING_CNT:                 EQU $40

; ====================================================================================================
; テキ出現制御初期処理
; ラウンド初期処理で設定されるワークエリア ROUNDの値を参照する
; ====================================================================================================
ENEMY_APPEARANCE_INIT:

    ; ■ROUNDに対応するテキ出現パターンデータのアドレスをENEMY_PTN_TBLから取得し、ENEMY_PTN_ADDRに設定
    LD A,(ROUND)
    LD HL,ENEMY_PTN_TBL
    CALL GET_ADDR_TBL
    LD (ENEMY_PTN_ADDR),DE

    ; ■ テキ出現制御処理
    CALL ENEMY_APPEARANCE_CTRL


ENEMY_APPEARANCE_INIT_EXIT:
    RET


; ====================================================================================================
; テキ出現制御処理
; 事前にENEMY_APPEARANCE_INITを実行しておくこと。
; HL,DEレジスタを破壊します
; ====================================================================================================
ENEMY_APPEARANCE_CTRL:

    ; ■ENEMY_PTN_ADDRから出現カウントを取得(2byte)
    LD HL,(ENEMY_PTN_ADDR)          ; HL <- テキ出現パターンデータの参照先アドレス
    LD E,(HL)                       ; DE <- 出現カウント(16bit)
    INC HL                          ; ENEMY_PTN_ADDR + 1
    LD D,(HL)

    ; ■出現カウント=$FFFFだったら抜ける
    LD A,D
    XOR $FF                         ; A=$FFの場合、ここでゼロフラグが立つ
    JR NZ,ENEMY_APPEARANCE_CTRL_L1  ; ゼロフラグが降りている場合は$FFではないので後続の処理へ
    LD A,E
    XOR $FF                         ; A=$FFの場合、ここでゼロフラグが立つ
    JR NZ,ENEMY_APPEARANCE_CTRL_L1  ; ゼロフラグが降りている場合は$FFではないので後続の処理へ

    RET                             ; ここに到達する=$FFFFなので、抜ける

ENEMY_APPEARANCE_CTRL_L1:
    PUSH DE                         ; 出現カウント(DE) -> HL
    POP HL

    LD DE,$0000                     ; 初期値 = $0000 とする

    LD A,(GAME_STATE)
    SUB STATE_ROUND_START
    JR Z,ENEMY_APPEARANCE_CTRL_L3   ; ゲーム状態 = ラウンドスタートの場合はL3へ

    LD DE,(TICK1)                   ; tickを取得

ENEMY_APPEARANCE_CTRL_L3:
    SBC HL,DE                       ; 出現カウント - tick != ZERO なら抜ける
    RET NZ

    ; テキキャラクター登録
    CALL ADD_ENEMY

    JP ENEMY_APPEARANCE_CTRL


; ====================================================================================================
; テキキャラクター登録処理
; ====================================================================================================
ADD_ENEMY:

    LD HL,(ENEMY_PTN_ADDR)          ; HL <- テキ出現パターンデータの参照先アドレス

    ; ■(ENEMY_PTN_ADDR+2)からキャラクター番号を取得
    INC HL                          ; ENEMY_PTN_ADDR + 2 = キャラクター番号
    INC HL                          ;
    LD A,(HL)                       ; A <- キャラクター番号

    ; ■パラメタ取得開始アドレスをワークに設定
    INC HL                          ; ENEMY_PTN_ADDR + 3 = キャラクター座標の開始アドレス
    LD (ENEMY_PARAM_ADDR),HL        ; パラメタ取得開始アドレスをワークに設定

    ; ■ENEMY_APPEARANCE_CTRLの次の処理用にアドレスを計算してワークに格納しておく
    LD DE,$0005
    ADD HL,DE
    LD (ENEMY_PTN_ADDR),HL

    ; ■キャラクター番号に対応するキャラクターをスプライトキャラクターワークテーブルに登録
    CALL ADD_CHARACTER

    RET


; ====================================================================================================
; タイムアウト時のテキキャラクター登録処理
; ====================================================================================================
ADD_ENEMY_TIMEOUT:

    LD HL,ENEMY_TIMEOUT             ; HL <- テキ出現パターンデータの参照先アドレス

    ; ■(ENEMY_PTN_ADDR+2)からキャラクター番号を取得
    INC HL                          ; ENEMY_PTN_ADDR + 2 = キャラクター番号
    INC HL                          ;
    LD A,(HL)                       ; A <- キャラクター番号

    ; ■パラメタ取得開始アドレスをワークに設定
    INC HL                          ; ENEMY_PTN_ADDR + 3 = キャラクター座標の開始アドレス
    LD (ENEMY_PARAM_ADDR),HL        ; パラメタ取得開始アドレスをワークに設定

    ; ■キャラクター番号に対応するキャラクターをスプライトキャラクターワークテーブルに登録
    CALL ADD_CHARACTER

    RET


; ====================================================================================================
; プレイヤーとの衝突判定処理
; 衝突している場合、キャリーフラグ＝ONで返す
; テキが出現中、プレイヤーがミス状態ならキャリーフラグ＝OFFで終了する
; ====================================================================================================
HIT_CHECK_FROM_ENEMY:

    ; ■出現中か
    LD A,(IX+12)
    OR A
    RET NZ                          ; 出現中カウンタ > 0 の場合、終了する

    ; ■プレイヤー状態判定
    CALL IS_PLAYER_MISS
    OR A
    RET NZ                          ; プレイヤーミス状態なら衝突判定せずに終了

    XOR A                           ; A <- 衝突判定用の相手キャラクター（プレイヤー）
                                    ;      0の場合スプライトキャラクターワークテーブルの先頭を参照するが
                                    ;      1〜2要素目はプレイヤー固定なのとアドレス算出が若干高速化されるので
                                    ;      このままとする
    CALL HIT_CHECK                  ; 衝突判定
    RET


SECTION bss_user
; ====================================================================================================
; ワークエリア
; プログラム起動時にcrtでゼロでramに設定される 
; ====================================================================================================

; ■テキ出現パターンデータの参照先アドレス
ENEMY_PTN_ADDR:
    DEFS 2

; ■テキ初期値データの参照先アドレス
ENEMY_PARAM_ADDR:
    DEFS 2
